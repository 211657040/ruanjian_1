DevOps是什么？
Dev:开发，跟代码有关
Ops：运维，跟工程（架构）有关
本身围绕价值（value）开展

并不是一个具体的产品，是一套实践、工具和文化理念，可以实现软件开发团队和 IT 团队之间的流程自动化和集成

没有使用DevOps的团队：开发人员（Dev）和运维人员（Ops）的KPI（关键绩效指标）是冲突的，开发人员追加功能，而运维人员追求稳定

DevOps 模式下的团队：开发和运营团队不再是“孤立”的。有时，这两个团队会合并为一个团队，合并后工程师会参与整个应用生命周期中的工作（从开发和测试到部署和运营），并具备多学科的技能。

DevOps的优势：
DevOps 的优势包括更快且更轻松的发布、团队效率、更高的安全性、更高品质的产品，以及更高的团队和客户满意度。

-------------------------------------------------------------------------
DevOps 具有连续性，从业人员使用无限循环来展示 DevOps 生命周期各个阶段之间的相互关系。尽管看似是按顺序进行的，但此循环实际表示需要在整个生命周期进行持续协作和迭代改进。

DevOps 生命周期由八个阶段组成，它们分别代表开发（循环的左半部分）和运营（循环的右半部分）所需的流程、功能和工具。团队会在每个阶段进行协作和沟通，以保持一致性、速度和质量。

发现——>计划——>构建——>测试——>部署——>运营——>观察——>持续反馈——>发现.......

发现：团队构建软件，使用如开会等方法探索、整理想法并确定顺序，确保创意和战斗目标保持一致，能对客户产生影响。

计划：应采用敏捷开发实践来提高速度和质量，分解工作成更小的部分以方便开发。

构建：使用github等

测试：多个开发人员将各自编写的代码存储到单个共享存储库中。将代码变更内容合并时，将运行自动测试，在集成之前确保代码正确无误。合并和测试代码通常有助于开发团队确保部署后的代码质量和可预测性

部署：通过持续部署 (CD)，允许团队自动频繁地将功能发布到生产环境中。团队还可以选择部署功能标记，从而稳定、有条不紊地向用户交付新代码，而不是一次性全部交付。这种方法提高了软件开发团队的速度、生产力和可持续性。

运营（运维）：管理面向客户的端到端 IT 服务交付。这包括设计、实施、配置、部署和维护支持组织服务的所有 IT 基础架构过程中涉及的实践。

观察：快速识别并解决影响产品正常运行时间、速度和功能的事务。自动通知您团队有关变更、高风险操作或故障的信息，以便保持服务的运行。

持续反馈：DevOps 团队应对每个版本进行评估，并生成报告以改进未来版本。通过收集持续反馈，团队可以改进其流程，并采纳客户反馈以改进下一个版本。

